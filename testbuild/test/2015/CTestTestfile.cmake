# CMake generated Testfile for 
# Source directory: F:/Workspace/Git/advent-of-code/test/2015
# Build directory: F:/Workspace/Git/advent-of-code/testbuild/test/2015
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 1 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 1 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 1 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 1 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 1 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 1 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 1 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 1 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 1 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 1 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 1 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 1 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 1 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 1 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 1 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 1 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 1 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 1 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 1 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 1 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 1 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 1 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 1 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 1 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 1 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 1 Part 2 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 2 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 2 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 2 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 2 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 2 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 2 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 2 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 2 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 2 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 2 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 2 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 2 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 2 Part 1 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 2 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 2 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 2 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 2 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 2 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 2 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 2 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 2 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 2 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 2 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 2 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 2 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 2 Part 2 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 char to orientation works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 3 char to orientation works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 char to orientation works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 char to orientation works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 3 char to orientation works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 char to orientation works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 char to orientation works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 3 char to orientation works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 char to orientation works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 char to orientation works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 3 char to orientation works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 char to orientation works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 3 char to orientation works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 1 visiting locations works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 3 Part 1 visiting locations works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 1 visiting locations works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 1 visiting locations works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 3 Part 1 visiting locations works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 1 visiting locations works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 1 visiting locations works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 3 Part 1 visiting locations works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 1 visiting locations works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 1 visiting locations works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 3 Part 1 visiting locations works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 1 visiting locations works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 1 visiting locations works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 3 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 3 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 3 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 3 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 1 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 3 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 3 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 3 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 3 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 3 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 3 Part 2 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 4 Example 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 4 Example 1 work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 4 Example 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 4 Example 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 4 Example 1 work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 4 Example 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 4 Example 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 4 Example 1 work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 4 Example 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 4 Example 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 4 Example 1 work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 4 Example 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 4 Example 1 work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 1 is string nice works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 5 Part 1 is string nice works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 1 is string nice works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 1 is string nice works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 5 Part 1 is string nice works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 1 is string nice works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 1 is string nice works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 5 Part 1 is string nice works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 1 is string nice works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 1 is string nice works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 5 Part 1 is string nice works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 1 is string nice works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 1 is string nice works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 5 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 5 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 5 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 5 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 2 is string nice works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 5 Part 2 is string nice works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 2 is string nice works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 2 is string nice works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 5 Part 2 is string nice works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 2 is string nice works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 2 is string nice works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 5 Part 2 is string nice works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 2 is string nice works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 2 is string nice works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 5 Part 2 is string nice works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 2 is string nice works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 2 is string nice works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 5 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 5 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 5 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 5 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 5 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 5 Part 2 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Input parsing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 6 Input parsing works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Input parsing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Input parsing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 6 Input parsing works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Input parsing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Input parsing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 6 Input parsing works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Input parsing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Input parsing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 6 Input parsing works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Input parsing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Input parsing works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 6 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 6 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 6 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 6 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 6 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 6 Part 2 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 7 Parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 7 Parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 7 Parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 7 Parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Parsing input works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 isResolved works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 7 isResolved works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 isResolved works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 isResolved works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 7 isResolved works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 isResolved works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 isResolved works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 7 isResolved works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 isResolved works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 isResolved works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 7 isResolved works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 isResolved works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 7 isResolved works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 7 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 7 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 7 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 7 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 7 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 7 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 7 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 7 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 7 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 7 Part 2 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 8 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 8 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 8 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 8 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 8 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 8 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 8 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 8 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 8 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 8 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 8 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 8 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 8 Part 1 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 8 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 8 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 8 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 8 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 8 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 8 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 8 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 8 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 8 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 8 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 8 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 8 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 8 Part 2 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 9 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 9 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 9 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 9 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 9 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 9 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 9 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 9 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 9 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 9 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 9 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 9 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 9 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 9 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 9 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 9 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 9 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 9 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 9 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 9 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 9 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 9 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 9 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 9 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 9 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 9 Part 2 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 10 Example works for 1 iteration"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 10 Example works for 1 iteration")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 10 Example works for 1 iteration"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 10 Example works for 1 iteration"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 10 Example works for 1 iteration")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 10 Example works for 1 iteration"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 10 Example works for 1 iteration"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 10 Example works for 1 iteration")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 10 Example works for 1 iteration"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 10 Example works for 1 iteration"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 10 Example works for 1 iteration")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 10 Example works for 1 iteration"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 10 Example works for 1 iteration"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 10 Example works for multiple iteration"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 10 Example works for multiple iteration")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 10 Example works for multiple iteration"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 10 Example works for multiple iteration"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 10 Example works for multiple iteration")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 10 Example works for multiple iteration"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 10 Example works for multiple iteration"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 10 Example works for multiple iteration")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 10 Example works for multiple iteration"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 10 Example works for multiple iteration"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 10 Example works for multiple iteration")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 10 Example works for multiple iteration"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 10 Example works for multiple iteration"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 passwords are incremented correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 11 passwords are incremented correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 passwords are incremented correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 passwords are incremented correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 11 passwords are incremented correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 passwords are incremented correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 passwords are incremented correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 11 passwords are incremented correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 passwords are incremented correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 passwords are incremented correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 11 passwords are incremented correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 passwords are incremented correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 11 passwords are incremented correctly"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 password requirements are validated correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 11 password requirements are validated correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 password requirements are validated correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 password requirements are validated correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 11 password requirements are validated correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 password requirements are validated correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 password requirements are validated correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 11 password requirements are validated correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 password requirements are validated correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 password requirements are validated correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 11 password requirements are validated correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 password requirements are validated correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 11 password requirements are validated correctly"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 11 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 11 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 11 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 11 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 11 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 11 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 11 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 12 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 12 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 12 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 12 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 12 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 12 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 12 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 12 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 12 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 12 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 12 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 12 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 12 Part 1 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 12 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 12 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 12 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 12 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 12 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 12 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 12 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 12 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 12 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 12 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 12 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 12 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 12 Part 2 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 13 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 14 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 14 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 14 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 14 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 14 parsing input works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 can calculate distance from time and info"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 14 can calculate distance from time and info")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 can calculate distance from time and info"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 can calculate distance from time and info"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 14 can calculate distance from time and info")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 can calculate distance from time and info"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 can calculate distance from time and info"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 14 can calculate distance from time and info")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 can calculate distance from time and info"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 can calculate distance from time and info"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 14 can calculate distance from time and info")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 can calculate distance from time and info"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 14 can calculate distance from time and info"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 14 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 14 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 14 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 14 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 14 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 14 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 14 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 14 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 14 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 14 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 14 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 14 Part 2 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 15 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 15 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 15 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 15 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 15 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 15 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 15 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 15 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 15 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 15 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 15 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 15 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 15 parsing input works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 15 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 16 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 16 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 16 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 parsing input works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 16 parsing input works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 parsing input works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 16 parsing input works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 16 isInvalid for part1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 16 isInvalid for part1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 16 isInvalid for part1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 16 isInvalid for part1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part1 works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part 2works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 16 isInvalid for part 2works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part 2works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part 2works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 16 isInvalid for part 2works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part 2works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part 2works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 16 isInvalid for part 2works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part 2works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part 2works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 16 isInvalid for part 2works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part 2works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 16 isInvalid for part 2works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 getPotentialsIds for part 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 16 getPotentialsIds for part 1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 getPotentialsIds for part 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 getPotentialsIds for part 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 16 getPotentialsIds for part 1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 getPotentialsIds for part 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 getPotentialsIds for part 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 16 getPotentialsIds for part 1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 getPotentialsIds for part 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 16 getPotentialsIds for part 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 16 getPotentialsIds for part 1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 16 getPotentialsIds for part 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 16 getPotentialsIds for part 1 works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 17 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 17 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 17 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 17 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 17 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 17 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 17 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 17 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 17 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 17 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 17 Examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 17 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 17 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 region is constructed correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 18 region is constructed correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 region is constructed correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 region is constructed correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 18 region is constructed correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 region is constructed correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 region is constructed correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 18 region is constructed correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 region is constructed correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 region is constructed correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 18 region is constructed correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 region is constructed correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 18 region is constructed correctly"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 1"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 18 iterating works as expected for part 1")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 1"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 1"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 18 iterating works as expected for part 1")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 1"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 1"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 18 iterating works as expected for part 1")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 1"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 1"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 18 iterating works as expected for part 1")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 1"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 1"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 2"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 18 iterating works as expected for part 2")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 2"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 2"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 18 iterating works as expected for part 2")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 2"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 2"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 18 iterating works as expected for part 2")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 2"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 2"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 18 iterating works as expected for part 2")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 2"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 18 iterating works as expected for part 2"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 examples work correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 18 examples work correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 examples work correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 examples work correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 18 examples work correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 examples work correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 examples work correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 18 examples work correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 examples work correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 18 examples work correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 18 examples work correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 18 examples work correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 18 examples work correctly"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 capital split works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 19 capital split works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 capital split works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 capital split works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 19 capital split works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 capital split works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 capital split works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 19 capital split works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 capital split works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 capital split works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 19 capital split works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 capital split works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 19 capital split works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 Parses input correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 19 Parses input correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 Parses input correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 Parses input correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 19 Parses input correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 Parses input correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 Parses input correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 19 Parses input correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 Parses input correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 Parses input correctly"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 19 Parses input correctly")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 Parses input correctly"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 19 Parses input correctly"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 getting steps to generate examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 19 getting steps to generate examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 getting steps to generate examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 getting steps to generate examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 19 getting steps to generate examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 getting steps to generate examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 getting steps to generate examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 19 getting steps to generate examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 getting steps to generate examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 19 getting steps to generate examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 19 getting steps to generate examples work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 19 getting steps to generate examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 19 getting steps to generate examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 20 Part 1 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 20 Part 1 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 20 Part 1 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 20 Part 1 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 20 Part 1 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 20 Part 1 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 20 Part 1 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 20 Part 1 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 20 Part 1 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 20 Part 1 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 20 Part 1 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 20 Part 1 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 20 Part 1 Example works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 21 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 21 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 21 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 21 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 21 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 21 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 21 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 21 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 21 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 21 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 21 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 21 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 21 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 22 Part 1 Example 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 22 Part 1 Example 1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 22 Part 1 Example 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 22 Part 1 Example 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 22 Part 1 Example 1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 22 Part 1 Example 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 22 Part 1 Example 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 22 Part 1 Example 1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 22 Part 1 Example 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 22 Part 1 Example 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 22 Part 1 Example 1 works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 22 Part 1 Example 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 22 Part 1 Example 1 works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 24 Part 1 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 24 Part 1 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 24 Part 1 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 24 Part 1 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 24 Part 1 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 24 Part 1 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 24 Part 1 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 24 Part 1 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 24 Part 1 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 24 Part 1 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 24 Part 1 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 24 Part 1 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 24 Part 1 Example works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 24 Part 2 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 24 Part 2 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 24 Part 2 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 24 Part 2 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 24 Part 2 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 24 Part 2 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 24 Part 2 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 24 Part 2 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 24 Part 2 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 24 Part 2 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 24 Part 2 Example works")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 24 Part 2 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 24 Part 2 Example works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 25 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Debug/advent-of-code-year2015-test.exe" "2015 Day 25 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 25 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 25 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/Release/advent-of-code-year2015-test.exe" "2015 Day 25 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 25 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 25 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/MinSizeRel/advent-of-code-year2015-test.exe" "2015 Day 25 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 25 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2015-test:2015 Day 25 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2015/RelWithDebInfo/advent-of-code-year2015-test.exe" "2015 Day 25 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2015-test:2015 Day 25 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2015-test;2015;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2015/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2015-test:2015 Day 25 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
