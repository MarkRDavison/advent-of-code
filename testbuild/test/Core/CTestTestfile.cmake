# CMake generated Testfile for 
# Source directory: F:/Workspace/Git/advent-of-code/test/Core
# Build directory: F:/Workspace/Git/advent-of-code/testbuild/test/Core
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-core-test:Updating region cell updates the item returned next time it is queried"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/Debug/advent-of-code-core-test.exe" "Updating region cell updates the item returned next time it is queried")
  set_tests_properties([=["advent-of-code-core-test:Updating region cell updates the item returned next time it is queried"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;region" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-core-test:Updating region cell updates the item returned next time it is queried"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/Release/advent-of-code-core-test.exe" "Updating region cell updates the item returned next time it is queried")
  set_tests_properties([=["advent-of-code-core-test:Updating region cell updates the item returned next time it is queried"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;region" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-core-test:Updating region cell updates the item returned next time it is queried"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/MinSizeRel/advent-of-code-core-test.exe" "Updating region cell updates the item returned next time it is queried")
  set_tests_properties([=["advent-of-code-core-test:Updating region cell updates the item returned next time it is queried"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;region" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-core-test:Updating region cell updates the item returned next time it is queried"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/RelWithDebInfo/advent-of-code-core-test.exe" "Updating region cell updates the item returned next time it is queried")
  set_tests_properties([=["advent-of-code-core-test:Updating region cell updates the item returned next time it is queried"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;region" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-core-test:Updating region cell updates the item returned next time it is queried"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-core-test:Missionaries & Cannibals"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/Debug/advent-of-code-core-test.exe" "Missionaries & Cannibals")
  set_tests_properties([=["advent-of-code-core-test:Missionaries & Cannibals"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;states" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-core-test:Missionaries & Cannibals"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/Release/advent-of-code-core-test.exe" "Missionaries & Cannibals")
  set_tests_properties([=["advent-of-code-core-test:Missionaries & Cannibals"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;states" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-core-test:Missionaries & Cannibals"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/MinSizeRel/advent-of-code-core-test.exe" "Missionaries & Cannibals")
  set_tests_properties([=["advent-of-code-core-test:Missionaries & Cannibals"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;states" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-core-test:Missionaries & Cannibals"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/RelWithDebInfo/advent-of-code-core-test.exe" "Missionaries & Cannibals")
  set_tests_properties([=["advent-of-code-core-test:Missionaries & Cannibals"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;states" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-core-test:Missionaries & Cannibals"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-core-test:Farmer, Fox, Chicken and Grain"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/Debug/advent-of-code-core-test.exe" "Farmer\\, Fox\\, Chicken and Grain")
  set_tests_properties([=["advent-of-code-core-test:Farmer, Fox, Chicken and Grain"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;states" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-core-test:Farmer, Fox, Chicken and Grain"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/Release/advent-of-code-core-test.exe" "Farmer\\, Fox\\, Chicken and Grain")
  set_tests_properties([=["advent-of-code-core-test:Farmer, Fox, Chicken and Grain"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;states" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-core-test:Farmer, Fox, Chicken and Grain"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/MinSizeRel/advent-of-code-core-test.exe" "Farmer\\, Fox\\, Chicken and Grain")
  set_tests_properties([=["advent-of-code-core-test:Farmer, Fox, Chicken and Grain"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;states" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-core-test:Farmer, Fox, Chicken and Grain"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/Core/RelWithDebInfo/advent-of-code-core-test.exe" "Farmer\\, Fox\\, Chicken and Grain")
  set_tests_properties([=["advent-of-code-core-test:Farmer, Fox, Chicken and Grain"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-core-test;core;states" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/Core/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-core-test:Farmer, Fox, Chicken and Grain"]=] NOT_AVAILABLE)
endif()
