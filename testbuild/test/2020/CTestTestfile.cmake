# CMake generated Testfile for 
# Source directory: F:/Workspace/Git/advent-of-code/test/2020
# Build directory: F:/Workspace/Git/advent-of-code/testbuild/test/2020
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 1 Part 1 and 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 1 Part 1 and 2 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 1 Part 1 and 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 1 Part 1 and 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 1 Part 1 and 2 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 1 Part 1 and 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 1 Part 1 and 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 1 Part 1 and 2 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 1 Part 1 and 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 1 Part 1 and 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 1 Part 1 and 2 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 1 Part 1 and 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 1 Part 1 and 2 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 2 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 2 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 2 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 2 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 2 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 3 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 3 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 3 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 3 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 3 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 3 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 3 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 3 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 3 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 3 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 3 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 3 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 3 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 4 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 4 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 4 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 4 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 4 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 2 Example 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 4 Part 2 Example 1 work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 2 Example 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 2 Example 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 4 Part 2 Example 1 work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 2 Example 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 2 Example 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 4 Part 2 Example 1 work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 2 Example 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 2 Example 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 4 Part 2 Example 1 work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 2 Example 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 4 Part 2 Example 1 work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 2 Example 2 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 4 Part 2 Example 2 work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 2 Example 2 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 2 Example 2 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 4 Part 2 Example 2 work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 2 Example 2 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 2 Example 2 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 4 Part 2 Example 2 work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 2 Example 2 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 4 Part 2 Example 2 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 4 Part 2 Example 2 work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 4 Part 2 Example 2 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 4 Part 2 Example 2 work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 5 getSeatInfo works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 5 getSeatInfo works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 5 getSeatInfo works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 5 getSeatInfo works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 5 getSeatInfo works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 5 getSeatInfo works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 5 getSeatInfo works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 5 getSeatInfo works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 5 getSeatInfo works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 5 getSeatInfo works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 5 getSeatInfo works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 5 getSeatInfo works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 5 getSeatInfo works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 5 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 5 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 5 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 5 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 5 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 5 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 5 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 5 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 5 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 5 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 5 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 5 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 5 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 6 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 7 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 7 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 7 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 7 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 7 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 7 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 7 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 7 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 7 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 7 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 7 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 7 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 7 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 8 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 8 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 8 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 8 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 8 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 8 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 8 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 8 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 8 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 8 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 8 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 8 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 8 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 9 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 9 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 9 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 9 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 9 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 9 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 9 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 9 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 9 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 9 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 9 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 9 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 9 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 10 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 11 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 11 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 11 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 11 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 11 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 11 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 11 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 11 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 11 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 11 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 11 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 11 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 11 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 12 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 12 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 12 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 12 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 12 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 12 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 12 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 12 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 12 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 12 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 12 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 12 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 12 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 13 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 14 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 14 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 14 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 14 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 14 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 14 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 14 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 14 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 14 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 14 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 14 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 14 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 14 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 14 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 14 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 14 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 14 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 14 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 14 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 14 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 14 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 14 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 14 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 14 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 14 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 14 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day15;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day15;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day15;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day15;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 15 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 16 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 16 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 16 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 16 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 16 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 16 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 16 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 16 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 16 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 16 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 16 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 16 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 16 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 17 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 17 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 17 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 17 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 17 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 17 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 17 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 17 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 17 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 17 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 17 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 17 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 17 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 17 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 17 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 17 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 17 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 17 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 17 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 17 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 17 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 17 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 17 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 17 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 17 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 17 Part 2 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 18 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 18 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 18 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 18 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 18 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 18 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 18 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 18 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 18 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 18 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 18 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 18 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 18 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Example 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 19 Example 1 works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Example 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Example 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 19 Example 1 works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Example 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Example 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 19 Example 1 works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Example 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Example 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 19 Example 1 works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Example 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 19 Example 1 works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 19 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 19 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 19 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 19 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 19 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Example 2 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 19 Example 2 works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Example 2 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Example 2 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 19 Example 2 works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Example 2 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Example 2 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 19 Example 2 works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Example 2 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 19 Example 2 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 19 Example 2 works")
  set_tests_properties([=["advent-of-code-year2020-test:Day 19 Example 2 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 19 Example 2 works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day20;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day20;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day20;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day20;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 20 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 21 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 21 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 21 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 21 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 21 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 21 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 21 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 21 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 21 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 21 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 21 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 21 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 21 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 22 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 22 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 22 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 22 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 22 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 22 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 22 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 22 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 22 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 22 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 22 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 22 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 22 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 23 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 23 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 23 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day23;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 23 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 23 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 23 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day23;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 23 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 23 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 23 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day23;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 23 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 23 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 23 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day23;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 23 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day24;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day24;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day24;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day24;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 24 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2020-test:Day 25 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Debug/advent-of-code-year2020-test.exe" "Day 25 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 25 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2020-test:Day 25 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/Release/advent-of-code-year2020-test.exe" "Day 25 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 25 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2020-test:Day 25 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/MinSizeRel/advent-of-code-year2020-test.exe" "Day 25 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 25 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2020-test:Day 25 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2020/RelWithDebInfo/advent-of-code-year2020-test.exe" "Day 25 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2020-test:Day 25 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2020-test;2020;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2020/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2020-test:Day 25 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
