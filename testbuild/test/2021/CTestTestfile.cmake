# CMake generated Testfile for 
# Source directory: F:/Workspace/Git/advent-of-code/test/2021
# Build directory: F:/Workspace/Git/advent-of-code/testbuild/test/2021
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 1 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 1 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 1 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 1 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 1 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 1 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 1 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 1 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 1 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 1 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 1 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 1 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 1 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 2 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 2 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 2 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 2 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 2 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 3 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 3 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 3 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 3 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 3 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 3 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 3 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 3 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 3 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 3 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 3 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 3 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 3 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can apply number"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 4 can apply number")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can apply number"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can apply number"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 4 can apply number")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can apply number"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can apply number"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 4 can apply number")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can apply number"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can apply number"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 4 can apply number")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can apply number"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 4 can apply number"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can detect when row has won"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 4 can detect when row has won")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can detect when row has won"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can detect when row has won"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 4 can detect when row has won")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can detect when row has won"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can detect when row has won"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 4 can detect when row has won")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can detect when row has won"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can detect when row has won"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 4 can detect when row has won")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can detect when row has won"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 4 can detect when row has won"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can detect when column has won"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 4 can detect when column has won")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can detect when column has won"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can detect when column has won"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 4 can detect when column has won")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can detect when column has won"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can detect when column has won"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 4 can detect when column has won")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can detect when column has won"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 4 can detect when column has won"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 4 can detect when column has won")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 can detect when column has won"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 4 can detect when column has won"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 4 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 4 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 4 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 4 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 4 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 4 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 4 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 4 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 4 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 4 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 5 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 5 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 5 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 5 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 5 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 5 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 5 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 5 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 5 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 5 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 5 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 5 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 5 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 6 iterateLanternFish works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 6 iterateLanternFish works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 6 iterateLanternFish works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 6 iterateLanternFish works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 6 iterateLanternFish works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 6 iterateLanternFish works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 6 iterateLanternFish works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 6 iterateLanternFish works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 6 iterateLanternFish works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 6 iterateLanternFish works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 6 iterateLanternFish works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 6 iterateLanternFish works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 6 iterateLanternFish works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 6 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 6 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 6 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 6 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 6 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 6 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 6 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 6 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 6 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 6 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 6 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 6 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 6 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 7 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 7 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 7 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 7 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 7 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 7 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 7 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 7 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 7 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 7 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 7 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 7 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 7 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 7 Solve for position works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 7 Solve for position works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 7 Solve for position works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 7 Solve for position works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 7 Solve for position works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 7 Solve for position works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 7 Solve for position works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 7 Solve for position works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 7 Solve for position works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 7 Solve for position works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 7 Solve for position works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 7 Solve for position works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 7 Solve for position works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 8 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 8 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 8 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 8 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 8 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 8 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 8 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 8 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 8 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 8 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 8 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 8 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 8 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 9 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 9 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 9 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 9 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 9 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 9 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 9 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 9 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 9 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 9 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 9 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 9 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 9 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 10 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 10 isCorrupt works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 10 isCorrupt works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 isCorrupt works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 10 isCorrupt works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 10 isCorrupt works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 isCorrupt works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 10 isCorrupt works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 10 isCorrupt works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 isCorrupt works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 10 isCorrupt works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 10 isCorrupt works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 isCorrupt works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 10 isCorrupt works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 10 complete works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 10 complete works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 complete works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 10 complete works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 10 complete works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 complete works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 10 complete works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 10 complete works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 complete works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 10 complete works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 10 complete works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 10 complete works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 10 complete works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 11 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 11 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 11 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 11 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 11 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 11 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 11 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 11 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 11 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 11 iterating works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 11 iterating works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 iterating works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 11 iterating works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 11 iterating works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 iterating works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 11 iterating works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 11 iterating works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 iterating works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 11 iterating works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 11 iterating works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 iterating works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 11 iterating works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 11 day 2 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 11 day 2 works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 day 2 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 11 day 2 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 11 day 2 works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 day 2 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 11 day 2 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 11 day 2 works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 day 2 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 11 day 2 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 11 day 2 works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 11 day 2 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 11 day 2 works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 12 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 12 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 12 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 12 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 12 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 12 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 12 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 12 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 12 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 12 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 12 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 12 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 12 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 13 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 13 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 13 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 13 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 14 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 14 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 14 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 14 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 14 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 14 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 14 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 14 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 14 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 14 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 14 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 14 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 14 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 15 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 15 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 15 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 15 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 16 decoding packets works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 16 decoding packets works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 decoding packets works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 16 decoding packets works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 16 decoding packets works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 decoding packets works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 16 decoding packets works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 16 decoding packets works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 decoding packets works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 16 decoding packets works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 16 decoding packets works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 decoding packets works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 16 decoding packets works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 16 Examples part 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 16 Examples part 1 work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 Examples part 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 16 Examples part 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 16 Examples part 1 work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 Examples part 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 16 Examples part 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 16 Examples part 1 work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 Examples part 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 16 Examples part 1 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 16 Examples part 1 work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 Examples part 1 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 16 Examples part 1 work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 16 Examples part 2 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 16 Examples part 2 work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 Examples part 2 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 16 Examples part 2 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 16 Examples part 2 work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 Examples part 2 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 16 Examples part 2 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 16 Examples part 2 work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 Examples part 2 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 16 Examples part 2 work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 16 Examples part 2 work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 16 Examples part 2 work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 16 Examples part 2 work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 17 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 17 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 17 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 17 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 17 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 17 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 17 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 17 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 17 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 17 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 17 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 17 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 17 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 18 big example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 18 big example works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 big example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 18 big example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 18 big example works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 big example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 18 big example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 18 big example works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 big example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 18 big example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 18 big example works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 big example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 18 big example works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 18 adding a list and then reducing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 18 adding a list and then reducing works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 adding a list and then reducing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 18 adding a list and then reducing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 18 adding a list and then reducing works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 adding a list and then reducing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 18 adding a list and then reducing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 18 adding a list and then reducing works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 adding a list and then reducing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 18 adding a list and then reducing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 18 adding a list and then reducing works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 adding a list and then reducing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 18 adding a list and then reducing works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 18 reducing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 18 reducing works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 reducing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 18 reducing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 18 reducing works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 reducing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 18 reducing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 18 reducing works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 reducing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 18 reducing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 18 reducing works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 reducing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 18 reducing works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 18 splitting works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 18 splitting works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 splitting works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 18 splitting works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 18 splitting works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 splitting works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 18 splitting works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 18 splitting works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 splitting works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 18 splitting works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 18 splitting works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 splitting works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 18 splitting works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 18 exploding works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 18 exploding works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 exploding works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 18 exploding works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 18 exploding works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 exploding works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 18 exploding works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 18 exploding works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 exploding works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 18 exploding works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 18 exploding works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 exploding works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 18 exploding works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 18 adding snail fish numbersworks"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 18 adding snail fish numbersworks")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 adding snail fish numbersworks"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 18 adding snail fish numbersworks"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 18 adding snail fish numbersworks")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 adding snail fish numbersworks"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 18 adding snail fish numbersworks"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 18 adding snail fish numbersworks")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 adding snail fish numbersworks"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 18 adding snail fish numbersworks"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 18 adding snail fish numbersworks")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 adding snail fish numbersworks"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 18 adding snail fish numbersworks"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 18 parsing snail fish works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 18 parsing snail fish works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 parsing snail fish works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 18 parsing snail fish works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 18 parsing snail fish works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 parsing snail fish works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 18 parsing snail fish works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 18 parsing snail fish works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 parsing snail fish works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 18 parsing snail fish works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 18 parsing snail fish works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 parsing snail fish works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 18 parsing snail fish works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 18 Magnitude works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 18 Magnitude works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 Magnitude works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 18 Magnitude works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 18 Magnitude works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 Magnitude works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 18 Magnitude works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 18 Magnitude works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 Magnitude works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 18 Magnitude works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 18 Magnitude works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 Magnitude works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 18 Magnitude works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 18 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 18 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 18 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 18 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 18 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 18 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 18 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 18 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 18 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 18 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 19 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 19 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 19 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 19 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 19 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 19 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 19 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 19 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 19 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 19 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 19 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 19 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 19 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 20 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 21 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 21 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 21 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 21 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 21 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 21 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 21 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 21 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 21 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 21 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 21 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 21 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 21 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 22 split works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 22 split works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 split works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 22 split works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 22 split works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 split works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 22 split works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 22 split works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 split works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 22 split works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 22 split works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 split works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 22 split works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 22 cubeInside works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 22 cubeInside works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 cubeInside works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 22 cubeInside works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 22 cubeInside works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 cubeInside works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 22 cubeInside works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 22 cubeInside works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 cubeInside works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 22 cubeInside works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 22 cubeInside works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 cubeInside works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 22 cubeInside works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 22 cubesIntersect works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 22 cubesIntersect works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 cubesIntersect works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 22 cubesIntersect works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 22 cubesIntersect works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 cubesIntersect works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 22 cubesIntersect works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 22 cubesIntersect works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 cubesIntersect works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 22 cubesIntersect works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 22 cubesIntersect works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 cubesIntersect works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 22 cubesIntersect works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 22 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 22 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 22 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 22 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 22 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 22 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 22 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 22 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 22 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day22;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 22 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 23 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 23 Example works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 23 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day23" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 23 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 23 Example works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 23 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day23" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 23 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 23 Example works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 23 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day23" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 23 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 23 Example works")
  set_tests_properties([=["advent-of-code-year2021-test:Day 23 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day23" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 23 Example works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 24 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2021-test:Day 25 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Debug/advent-of-code-year2021-test.exe" "Day 25 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 25 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2021-test:Day 25 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/Release/advent-of-code-year2021-test.exe" "Day 25 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 25 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2021-test:Day 25 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/MinSizeRel/advent-of-code-year2021-test.exe" "Day 25 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 25 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2021-test:Day 25 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2021/RelWithDebInfo/advent-of-code-year2021-test.exe" "Day 25 Examples work")
  set_tests_properties([=["advent-of-code-year2021-test:Day 25 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2021-test;2021;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2021/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2021-test:Day 25 Examples work"]=] NOT_AVAILABLE)
endif()
