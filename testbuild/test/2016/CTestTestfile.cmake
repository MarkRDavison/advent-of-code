# CMake generated Testfile for 
# Source directory: F:/Workspace/Git/advent-of-code/test/2016
# Build directory: F:/Workspace/Git/advent-of-code/testbuild/test/2016
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 1 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 1 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 1 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 1 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 1 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 1 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 1 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 1 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 1 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 1 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 1 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 1 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 1 Part 1 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 1 Part 2 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 1 Part 2 Example works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 1 Part 2 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 1 Part 2 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 1 Part 2 Example works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 1 Part 2 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 1 Part 2 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 1 Part 2 Example works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 1 Part 2 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 1 Part 2 Example works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 1 Part 2 Example works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 1 Part 2 Example works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day01" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 1 Part 2 Example works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 2 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 2 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 2 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 2 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 2 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 2 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 2 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 2 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 2 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 2 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 2 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 2 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 2 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 2 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 2 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 2 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 2 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 2 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 2 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 2 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 2 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 2 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 2 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 2 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 2 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day02" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 2 Part 2 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 3 isValidTriangleWorks"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 3 isValidTriangleWorks")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 3 isValidTriangleWorks"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 3 isValidTriangleWorks"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 3 isValidTriangleWorks")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 3 isValidTriangleWorks"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 3 isValidTriangleWorks"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 3 isValidTriangleWorks")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 3 isValidTriangleWorks"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 3 isValidTriangleWorks"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 3 isValidTriangleWorks")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 3 isValidTriangleWorks"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day03" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 3 isValidTriangleWorks"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 4 validating rooms works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 4 validating rooms works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 4 validating rooms works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 4 validating rooms works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 4 validating rooms works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 4 validating rooms works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 4 validating rooms works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 4 validating rooms works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 4 validating rooms works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 4 validating rooms works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 4 validating rooms works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 4 validating rooms works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 4 validating rooms works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 4 validating north pole room works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 4 validating north pole room works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 4 validating north pole room works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 4 validating north pole room works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 4 validating north pole room works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 4 validating north pole room works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 4 validating north pole room works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 4 validating north pole room works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 4 validating north pole room works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 4 validating north pole room works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 4 validating north pole room works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 4 validating north pole room works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day04" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 4 validating north pole room works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 5 isValidIndex works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 5 isValidIndex works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 5 isValidIndex works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 5 isValidIndex works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 5 isValidIndex works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 5 isValidIndex works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 5 isValidIndex works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 5 isValidIndex works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 5 isValidIndex works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 5 isValidIndex works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 5 isValidIndex works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 5 isValidIndex works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day05" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 5 isValidIndex works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 6 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 6 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 6 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 6 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 6 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 6 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 6 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 6 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 6 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 6 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 6 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 6 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 6 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 6 Part 2 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 6 Part 2 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 6 Part 2 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day06" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 6 Part 2 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 supportsTLS works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 7 supportsTLS works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 supportsTLS works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 supportsTLS works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 7 supportsTLS works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 supportsTLS works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 supportsTLS works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 7 supportsTLS works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 supportsTLS works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 supportsTLS works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 7 supportsTLS works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 supportsTLS works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 7 supportsTLS works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 hasABBA works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 7 hasABBA works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 hasABBA works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 hasABBA works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 7 hasABBA works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 hasABBA works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 hasABBA works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 7 hasABBA works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 hasABBA works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 hasABBA works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 7 hasABBA works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 hasABBA works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 7 hasABBA works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 supportsSSL works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 7 supportsSSL works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 supportsSSL works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 supportsSSL works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 7 supportsSSL works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 supportsSSL works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 supportsSSL works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 7 supportsSSL works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 supportsSSL works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 7 supportsSSL works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 7 supportsSSL works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 7 supportsSSL works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day07" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 7 supportsSSL works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 8 applying instructions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 8 applying instructions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 8 applying instructions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 8 applying instructions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 8 applying instructions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 8 applying instructions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 8 applying instructions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 8 applying instructions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 8 applying instructions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 8 applying instructions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 8 applying instructions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 8 applying instructions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 8 applying instructions works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 8 part 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 8 part 1 works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 8 part 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 8 part 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 8 part 1 works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 8 part 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 8 part 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 8 part 1 works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 8 part 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 8 part 1 works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 8 part 1 works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 8 part 1 works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day08" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 8 part 1 works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 9 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 9 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 9 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 9 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 9 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 9 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 9 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 9 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 9 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 9 Part 1 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 9 Part 1 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 9 Part 1 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 9 Part 1 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 9 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 9 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 9 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 9 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 9 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 9 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 9 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 9 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 9 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 9 Part 2 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 9 Part 2 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 9 Part 2 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day09" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 9 Part 2 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 10 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 10 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 10 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day10" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 10 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 11 valid works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 11 valid works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 11 valid works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 11 valid works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 11 valid works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 11 valid works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 11 valid works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 11 valid works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 11 valid works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 11 valid works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 11 valid works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 11 valid works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 11 valid works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 11 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 11 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 11 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 11 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 11 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 11 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 11 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 11 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 11 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 11 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 11 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 11 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day11" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 11 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 12 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 12 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 12 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 12 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 12 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 12 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 12 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 12 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 12 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 12 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 12 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 12 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day12" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 12 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 13 get traversable works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 13 get traversable works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 13 get traversable works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 13 get traversable works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 13 get traversable works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 13 get traversable works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 13 get traversable works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 13 get traversable works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 13 get traversable works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 13 get traversable works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 13 get traversable works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 13 get traversable works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 13 get traversable works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 13 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 13 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 13 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 13 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 13 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 13 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 13 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 13 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 13 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 13 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 13 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 13 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day13" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 13 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 hasTriple works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 14 hasTriple works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 hasTriple works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 hasTriple works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 14 hasTriple works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 hasTriple works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 hasTriple works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 14 hasTriple works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 hasTriple works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 hasTriple works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 14 hasTriple works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 hasTriple works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 14 hasTriple works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 hasQuintuple works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 14 hasQuintuple works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 hasQuintuple works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 hasQuintuple works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 14 hasQuintuple works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 hasQuintuple works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 hasQuintuple works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 14 hasQuintuple works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 hasQuintuple works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 hasQuintuple works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 14 hasQuintuple works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 hasQuintuple works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 14 hasQuintuple works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 isKey works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 14 isKey works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 isKey works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 isKey works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 14 isKey works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 isKey works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 isKey works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 14 isKey works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 isKey works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 isKey works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 14 isKey works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 isKey works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 14 isKey works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 isKey works for key stretching"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 14 isKey works for key stretching")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 isKey works for key stretching"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 isKey works for key stretching"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 14 isKey works for key stretching")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 isKey works for key stretching"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 isKey works for key stretching"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 14 isKey works for key stretching")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 isKey works for key stretching"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 isKey works for key stretching"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 14 isKey works for key stretching")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 isKey works for key stretching"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 14 isKey works for key stretching"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 14 getNthKeyIndex works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 14 getNthKeyIndex works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 14 getNthKeyIndex works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 14 getNthKeyIndex works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works for key stretching"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 14 getNthKeyIndex works for key stretching")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works for key stretching"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works for key stretching"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 14 getNthKeyIndex works for key stretching")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works for key stretching"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works for key stretching"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 14 getNthKeyIndex works for key stretching")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works for key stretching"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works for key stretching"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 14 getNthKeyIndex works for key stretching")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works for key stretching"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day14;slow" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 14 getNthKeyIndex works for key stretching"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 getNumberAndStartingPositions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 15 getNumberAndStartingPositions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 getNumberAndStartingPositions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 getNumberAndStartingPositions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 15 getNumberAndStartingPositions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 getNumberAndStartingPositions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 getNumberAndStartingPositions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 15 getNumberAndStartingPositions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 getNumberAndStartingPositions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 getNumberAndStartingPositions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 15 getNumberAndStartingPositions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 getNumberAndStartingPositions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 15 getNumberAndStartingPositions works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 isValidFromStartTime works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 15 isValidFromStartTime works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 isValidFromStartTime works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 isValidFromStartTime works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 15 isValidFromStartTime works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 isValidFromStartTime works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 isValidFromStartTime works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 15 isValidFromStartTime works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 isValidFromStartTime works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 isValidFromStartTime works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 15 isValidFromStartTime works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 isValidFromStartTime works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 15 isValidFromStartTime works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 getFirstTime works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 15 getFirstTime works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 getFirstTime works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 getFirstTime works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 15 getFirstTime works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 getFirstTime works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 getFirstTime works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 15 getFirstTime works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 getFirstTime works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 15 getFirstTime works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 15 getFirstTime works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 15 getFirstTime works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day15" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 15 getFirstTime works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcess works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 16 performDragonProcess works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcess works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcess works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 16 performDragonProcess works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcess works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcess works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 16 performDragonProcess works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcess works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcess works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 16 performDragonProcess works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcess works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcess works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcessForDesiredSize works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 16 performDragonProcessForDesiredSize works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcessForDesiredSize works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcessForDesiredSize works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 16 performDragonProcessForDesiredSize works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcessForDesiredSize works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcessForDesiredSize works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 16 performDragonProcessForDesiredSize works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcessForDesiredSize works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcessForDesiredSize works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 16 performDragonProcessForDesiredSize works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcessForDesiredSize works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 16 performDragonProcessForDesiredSize works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksum works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 16 calculateChecksum works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksum works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksum works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 16 calculateChecksum works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksum works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksum works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 16 calculateChecksum works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksum works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksum works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 16 calculateChecksum works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksum works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksum works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksumFromStateForSize works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 16 calculateChecksumFromStateForSize works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksumFromStateForSize works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksumFromStateForSize works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 16 calculateChecksumFromStateForSize works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksumFromStateForSize works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksumFromStateForSize works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 16 calculateChecksumFromStateForSize works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksumFromStateForSize works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksumFromStateForSize works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 16 calculateChecksumFromStateForSize works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksumFromStateForSize works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day16" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 16 calculateChecksumFromStateForSize works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 getRoomDoorState works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 17 getRoomDoorState works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 getRoomDoorState works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 getRoomDoorState works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 17 getRoomDoorState works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 getRoomDoorState works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 getRoomDoorState works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 17 getRoomDoorState works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 getRoomDoorState works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 getRoomDoorState works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 17 getRoomDoorState works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 getRoomDoorState works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 17 getRoomDoorState works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 explore shortest works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 17 explore shortest works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 explore shortest works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 explore shortest works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 17 explore shortest works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 explore shortest works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 explore shortest works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 17 explore shortest works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 explore shortest works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 explore shortest works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 17 explore shortest works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 explore shortest works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 17 explore shortest works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 explore longest works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 17 explore longest works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 explore longest works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 explore longest works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 17 explore longest works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 explore longest works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 explore longest works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 17 explore longest works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 explore longest works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 17 explore longest works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 17 explore longest works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 17 explore longest works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day17" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 17 explore longest works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 18 createMap works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 18 createMap works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 18 createMap works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 18 createMap works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 18 createMap works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 18 createMap works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 18 createMap works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 18 createMap works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 18 createMap works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 18 createMap works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 18 createMap works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 18 createMap works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 18 createMap works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 18 getSafeTilesCount works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 18 getSafeTilesCount works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 18 getSafeTilesCount works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 18 getSafeTilesCount works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 18 getSafeTilesCount works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 18 getSafeTilesCount works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 18 getSafeTilesCount works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 18 getSafeTilesCount works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 18 getSafeTilesCount works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 18 getSafeTilesCount works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 18 getSafeTilesCount works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 18 getSafeTilesCount works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day18" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 18 getSafeTilesCount works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresents works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 19 solveElfPresents works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresents works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresents works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 19 solveElfPresents works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresents works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresents works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 19 solveElfPresents works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresents works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresents works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 19 solveElfPresents works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresents works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresents works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresentsAcross works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 19 solveElfPresentsAcross works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresentsAcross works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresentsAcross works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 19 solveElfPresentsAcross works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresentsAcross works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresentsAcross works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 19 solveElfPresentsAcross works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresentsAcross works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresentsAcross works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 19 solveElfPresentsAcross works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresentsAcross works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day19" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 19 solveElfPresentsAcross works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 20 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 20 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 20 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day20" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 20 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 21 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 21 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 21 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 21 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 21 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 parsing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 21 parsing works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 parsing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 parsing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 21 parsing works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 parsing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 parsing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 21 parsing works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 parsing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 parsing works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 21 parsing works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 parsing works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 21 parsing works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 applying instructions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 21 applying instructions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 applying instructions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 applying instructions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 21 applying instructions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 applying instructions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 applying instructions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 21 applying instructions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 applying instructions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 21 applying instructions works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 21 applying instructions works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 21 applying instructions works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day21" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 21 applying instructions works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 22 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 22 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 22 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 22 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 22 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 22 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 22 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 22 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 22 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 22 Part 1 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 22 Part 1 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 22 Part 1 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day22" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 22 Part 1 Example work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 23 toggle works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 23 toggle works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 23 toggle works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day23" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 23 toggle works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 23 toggle works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 23 toggle works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day23" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 23 toggle works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 23 toggle works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 23 toggle works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day23" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 23 toggle works"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 23 toggle works")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 23 toggle works"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day23" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 23 toggle works"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 24 Examples work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 24 Examples work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 24 Examples work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day24" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 24 Examples work"]=] NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 25 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Debug/advent-of-code-year2016-test.exe" "2016 Day 25 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 25 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 25 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/Release/advent-of-code-year2016-test.exe" "2016 Day 25 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 25 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 25 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/MinSizeRel/advent-of-code-year2016-test.exe" "2016 Day 25 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 25 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test([=["advent-of-code-year2016-test:2016 Day 25 Example work"]=] "F:/Workspace/Git/advent-of-code/testbuild/test/2016/RelWithDebInfo/advent-of-code-year2016-test.exe" "2016 Day 25 Example work")
  set_tests_properties([=["advent-of-code-year2016-test:2016 Day 25 Example work"]=] PROPERTIES  FAIL_REGULAR_EXPRESSION "No tests ran" LABELS "advent-of-code-year2016-test;2016;day25" _BACKTRACE_TRIPLES "F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;193;add_test;F:/Workspace/Git/advent-of-code/thirdparty/catch/contrib/ParseAndAddCatchTests.cmake;222;ParseAndAddCatchTests_ParseFile;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;19;ParseAndAddCatchTests;F:/Workspace/Git/advent-of-code/test/2016/CMakeLists.txt;0;")
else()
  add_test([=["advent-of-code-year2016-test:2016 Day 25 Example work"]=] NOT_AVAILABLE)
endif()
